@use "src/util" as util;

$viewports: (
  small: 768,
  large: 1280
);

@function _get-viewports() {
  $result: ();

  $previousMin: 0;

  @for $i from 1 through length($viewports) {
    $viewport: nth($viewports, $i);
    $name: nth($viewport, 1);
    $min: nth($viewport, 2);
    $max: null;

    @if ($i < length($viewports)) {
      $nextDevice: nth($viewports, $i + 1);
      $max: nth($nextDevice, 2) - 1
    }

    $result: map_merge($result, (
      #{$name}: (
        min: nth($viewport, 2),
        max: $max
      )));
  }

  @return $result;
}

@mixin _viewport($name, $type: screen) {
  $viewports: _get-viewports();

  $boundaries: map_get($viewports, $name);

  @if ($boundaries) {
    $value: map_get($boundaries, min);

    @if ($value) {
      @media #{$type} and (min-width: util.px-to-rem($value)) {
        @content;
      }
    } @else {
      @content;
    }
  } @else {
    @content;
  }
}

@mixin small($type: screen) {
  @include _viewport(small, $type) {
    @content;
  }
}

@mixin large($type: screen) {
  @include _viewport(large, $type) {
    @content;
  }
}