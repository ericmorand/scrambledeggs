import {Component} from "react";
import * as React from "react";

import {createElement} from "react";

import type {FunctionComponent} from "react";

export type <%= camelName %>Properties = {
    content: string
};

export type <%= camelName %>State = {
    foo: string
};

export const <%= camelName %>: FunctionComponent<<%= camelName %>Properties>> = (properties) => createElement(class extends Component<<%= camelName %>Properties, <%= camelName %>State> {
    constructor(properties: <%= camelName %>Properties) {
        super(properties);

        this.state = {
            foo: 'state.foo'
        }
    }

    render() {
        return <div className="<%= cleanName %>">
            {this.props.content}
            {this.state.foo}
        </div>;
    }
}, properties);

<%= camelName %>.displayName = '<%= camelName %>';